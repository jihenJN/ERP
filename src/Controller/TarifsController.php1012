<?php

declare(strict_types=1);

namespace App\Controller;

/**
 * Tarifs Controller
 *
 * @property \App\Model\Table\TarifsTable $Tarifs
 * @method \App\Model\Entity\Tarif[]|\Cake\Datasource\ResultSetInterface paginate($object = null, array $settings = [])
 */
class TarifsController extends AppController
{
    /**
     * Index method
     *
     * @return \Cake\Http\Response|null|void Renders view
     */
    public function index()
    {
        $this->paginate = [
            'contain' => ['Typeclients'],
        ];
        $tarifs = $this->paginate($this->Tarifs);

        $this->set(compact('tarifs'));
    }

    /**
     * View method
     *
     * @param string|null $id Tarif id.
     * @return \Cake\Http\Response|null|void Renders view
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $fam = $this->Tarifs->Familles->find('all')->where(["Familles.vente =  '" . 1 . "' "]);
        //debug($fam); // die;
        $dett = '0';
        foreach ($fam as $f) {
            //debug($f); //die;
            $dett = $dett . ',' . $f->id;
        }

        // $dett=implode(',',$fam);
        //debug($dett); //die;
        if ($dett != '') {
            $cond100 = 'Articles.famille_id in (' . $dett . ')';
        }
        // debug($cond100);

        $articles = $this->Tarifs->Articles->find('all')->where([$cond100]);
        //debug($articles);
        //die;
        $tarif = $this->Tarifs->get($id, [
            'contain' => []
        ]);

        if ($this->request->is(['patch', 'post', 'put'])) {
            $tarif = $this->Tarifs->patchEntity($tarif, $this->request->getData());
            if ($this->Tarifs->save($tarif)) {
                $tarif_id = $tarif->id;
                if (isset($this->request->getData('data')['tarifclients']) && (!empty($this->request->getData('data')['tarifclients']))) {
                    //debug($this->request->getData());die;
                    $this->loadModel('Tarifclients');
                    foreach ($this->request->getData('data')['tarifclients'] as $i => $tar) {
                        //debug($tar);
                        if ($tar['sup0'] != 1) {
                            $data['tarif_id'] = $tarif_id;
                            $data['article_id'] = $tar['article_id'];
                            $data['prix'] = $tar['prix'];
                            // $data['date'] = $tar['date'];
                            $tarifclient = $this->fetchTable('Tarifclients')->newEmptyEntity();
                            $tarifclient = $this->Tarifclients->patchEntity($tarifclient, $data);
                            if ($this->Tarifclients->save($tarifclient)) {
                                return $this->redirect(['action' => 'index']);
                            } else {
                            }
                        }
                    }
                }
            }
        }
        $tarifclients = $this->Tarifs->Tarifclients->find('all', [
            'contain' => ['Articles']
        ])
            ->where(['tarif_id' => $id]);
        
        $typeclients = $this->Tarifs->Typeclients->find('list', ['keyfield' => 'id', 'valueField' => 'type']);
        $this->set(compact('tarifclients', 'tarif', 'articles', 'typeclients'));
    }


    /**
     * Add method
     *
     * @return \Cake\Http\Response|null Redirects on successful add, renders view otherwise.
     */
    public function add()
    {
        $fam = $this->Tarifs->Familles->find('all')->where(["Familles.vente =  '" . 1 . "' "]);
        //debug($fam); // die;
        $dett = '0';
        foreach ($fam as $f) {
            //debug($f); //die;
            $dett = $dett . ',' . $f->id;
        }

        // $dett=implode(',',$fam);
        //debug($dett); //die;
        if ($dett != '') {
            $cond100 = 'Articles.famille_id in (' . $dett . ')';
        }
        // debug($cond100);

        $articles = $this->Tarifs->Articles->find('all')->where([$cond100]);
        // debug($articles);
        // die;
        $tarif = $this->Tarifs->newEmptyEntity();
        //debug($tarif);die;
        if ($this->request->is('post')) {
          
         //  debug($tarif);die;
          
            $tarif = $this->Tarifs->patchEntity($tarif, $this->request->getData());
           // debug($tarif);die;
            if ($this->Tarifs->save($tarif)) {
                $tarif_id = $tarif->id;
                if (isset($this->request->getData('data')['tarifclients']) && (!empty($this->request->getData('data')['tarifclients']))) {
                    //debug($this->request->getData());die;
                    $this->loadModel('Tarifclients');
                    foreach ($this->request->getData('data')['tarifclients'] as $i => $tar) {
                        //debug($tar);
                        if ($tar['sup0'] != 1) {
                            $data['tarif_id'] = $tarif_id;
                            $data['article_id'] = $tar['article_id'];
                            $data['prix'] = $tar['prix'];
                            // $data['date'] = $tar['date'];
                            $tarifclient = $this->fetchTable('Tarifclients')->newEmptyEntity();
                            $tarifclient = $this->Tarifclients->patchEntity($tarifclient, $data);
                            if ($this->Tarifclients->save($tarifclient)) {
                                
                            } else {
                            }
                        }
                    }
                }
            }
            // $a = $this->request->getData()['typeclient_id'];

            // //debug($a);die;
            // foreach ($this->request->getData('data')['tarifs']  as $rem) {
            //     if ($rem['sup0'] != 1) {
            //         //  debug($tarif);die;
            //         $rem['typeclient_id'] = $a;
            //         $rem['article_id'] = $rem['article_id'];
            //         $rem['prix'] = $rem['prix'];

            //         $tarif = $this->Tarifs->patchEntity($tarif, $rem);

            //         if ($this->Tarifs->save($tarif)) {
            //             $this->Flash->success(__('The {0} has been saved.', 'Tarif'));

            //             
            //         }
            //     }
            // }
            // $tarif = $this->Tarifs->patchEntity($tarif, $this->request->getData());
            //debug($this->request->getData());
            return $this->redirect(['action' => 'index']);
        }

        //debug($articles);die;
        $typeclients = $this->Tarifs->Typeclients->find('list', ['keyfield' => 'id', 'valueField' => 'type']);
        $this->set(compact('tarif', 'articles', 'typeclients'));
    }


    /**
     * Edit method
     *
     * @param string|null $id Tarif id.
     * @return \Cake\Http\Response|null Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function edit($id = null)
    {
        $fam = $this->Tarifs->Familles->find('all')->where(["Familles.vente =  '" . 1 . "' "]);
        $dett = '0';
        foreach ($fam as $f) {
            $dett = $dett . ',' . $f->id;
        }
        if ($dett != '') {
            $cond100 = 'Articles.famille_id in (' . $dett . ')';
        }
        $articles = $this->Tarifs->Articles->find('all')->where([$cond100]);
        $tarif = $this->Tarifs->get($id, [
            'contain' => []
        ]);

        $tarif = $this->Tarifs->patchEntity($tarif, $this->request->getData());
        if ($this->request->is(['patch', 'post', 'put'])) {
            //debug($this->request->getData()); //die;
            $a = $this->request->getData()['typeclient_id'];
            foreach ($this->request->getData('data')['tarifs']  as $rem) {
                $rem['typeclient_id'] = $a;
                $rem['article_id'] = $rem['article_id'];
                $rem['prix'] = $rem['prix'];
                $tarif = $this->Tarifs->patchEntity($tarif, $rem);
                //$tarif = $this->Tarifs->patchEntity($tarif, $this->request->getData());
                if ($this->Tarifs->save($tarif)) {
                    return $this->redirect(['action' => 'index']);
                }
            }
        }

        $typeclients = $this->Tarifs->Typeclients->find('list', ['keyfield' => 'id', 'valueField' => 'type']);
        $this->set(compact('tarif', 'articles', 'typeclients'));
    }


    /**
     * Delete method
     *
     * @param string|null $id Tarif id.
     * @return \Cake\Http\Response|null Redirects to index.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function delete($id = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        $tarif = $this->Tarifs->get($id);
        if ($this->Tarifs->delete($tarif)) {
            $this->Flash->success(__('The {0} has been deleted.', 'Tarif'));
        } else {
            $this->Flash->error(__('The {0} could not be deleted. Please, try again.', 'Tarif'));
        }

        return $this->redirect(['action' => 'index']);
    }
}
