<?php

declare(strict_types=1);

namespace App\Controller;

/**
 * Remiseqtes Controller
 *
 * @property \App\Model\Table\RemiseqtesTable $Remiseqtes
 * @method \App\Model\Entity\Remiseqte[]|\Cake\Datasource\ResultSetInterface paginate($object = null, array $settings = [])
 */
class RemiseqtesController extends AppController
{
    /**
     * Index method
     *
     * @return \Cake\Http\Response|null|void Renders view
     */
    public function index()
    {
        $cond1 = "";
        $article_id = $this->request->getQuery('article_id');
        if ($article_id) {
            $cond1 = "Remiseqtes.article_id =  '" . $article_id . "' ";
        }
        $query = $this->Remiseqtes->find('all')->where([$cond1])->order(["Remiseqtes.id" => 'desc']);
        $this->paginate = [
            'contain' => [],
        ];
        $remiseqtes = $this->paginate($query);
        // $articles = $this->fetchTable('Articles')->find('list', ['keyfield' => 'id', 'valueField' => 'Dsignation']);
        $this->set(compact('remiseqtes'));
    }

    /**
     * View method
     *
     * @param string|null $id Remiseqte id.
     * @return \Cake\Http\Response|null|void Renders view
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $remiseqte = $this->Remiseqtes->get($id, [
            'contain' => []
        ]);
        if ($this->request->is(['patch', 'post', 'put'])) {
            $remiseqte = $this->Remiseqtes->patchEntity($remiseqte, $this->request->getData());
            if ($this->Remiseqtes->save($remiseqte)) {
                $this->Flash->success(__('The {0} has been saved.', 'Remiseqte'));

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('The {0} could not be saved. Please, try again.', 'Remiseqte'));
        }
        //$articles = $this->Remiseqtes->Articles->find('list', ['limit' => 200]);
        $this->set(compact('remiseqte'));
    }


    /**
     * Add method
     *
     * @return \Cake\Http\Response|null Redirects on successful add, renders view otherwise.
     */
    public function add()
    {
        $remiseqte = $this->Remiseqtes->newEmptyEntity();
        if ($this->request->is('post')) {
            //debug($this->request->getData('data'));
            if (isset($this->request->getData('data')['remiseqtes1']) && (!empty($this->request->getData('data')['remiseqtes1']))) {
                //$remiseqte = $this->Remiseqtes->newEmptyEntity();

                foreach ($this->request->getData('data')['remiseqtes1']  as  $rem) {
                    //debug($rem);
                    // $remiseqte = $this->fetchTable('Remiseqtes')->newEmptyEntity();

                    $remiseqte = $this->Remiseqtes->patchEntity($remiseqte, $rem);
                    if ($this->Remiseqtes->save($remiseqte)) {
                        
                    }
                }
                // $remiseqte = $this->Remiseqtes->patchEntity($rem, $this->request->getData());

             
            }
            return $this->redirect(['action' => 'index']);
        }
        $this->set(compact('remiseqte'));
    }


    /**
     * Edit method
     *
     * @param string|null $id Remiseqte id.
     * @return \Cake\Http\Response|null Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function edit($id = null)
    {
        $remiseqte = $this->Remiseqtes->get($id, [
            'contain' => []
        ]);
        if ($this->request->is(['patch', 'post', 'put'])) {
            $remiseqte = $this->Remiseqtes->patchEntity($remiseqte, $this->request->getData());
            if ($this->Remiseqtes->save($remiseqte)) {
                $this->Flash->success(__('The {0} has been saved.', 'Remiseqte'));

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('The {0} could not be saved. Please, try again.', 'Remiseqte'));
        }
        //$articles = $this->Remiseqtes->Articles->find('list', ['limit' => 200]);
        $this->set(compact('remiseqte'));
    }


    /**
     * Delete method
     *
     * @param string|null $id Remiseqte id.
     * @return \Cake\Http\Response|null Redirects to index.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function delete($id = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        $remiseqte = $this->Remiseqtes->get($id);
        if ($this->Remiseqtes->delete($remiseqte)) {
            $this->Flash->success(__('The {0} has been deleted.', 'Remiseqte'));
        } else {
            $this->Flash->error(__('The {0} could not be deleted. Please, try again.', 'Remiseqte'));
        }

        return $this->redirect(['action' => 'index']);
    }
}
